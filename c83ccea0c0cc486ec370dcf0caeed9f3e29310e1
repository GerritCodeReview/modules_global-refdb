{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a27bf00_a3cad230",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1144862
      },
      "writtenOn": "2025-07-10T12:59:05Z",
      "side": 1,
      "message": "third proposal after:\nhttps://gerrit-review.googlesource.com/c/modules/global-refdb/+/489323\nhttps://gerrit-review.googlesource.com/c/modules/global-refdb/+/489202",
      "revId": "c83ccea0c0cc486ec370dcf0caeed9f3e29310e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c13ff10_c9eb0eea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 4070042
      },
      "writtenOn": "2025-07-24T19:35:20Z",
      "side": 1,
      "message": "44 14.0gal guru711beonairstudent@gmail.com",
      "revId": "c83ccea0c0cc486ec370dcf0caeed9f3e29310e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b621bd31_23f0dca4",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateSnapshot.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-07-11T05:18:09Z",
      "side": 1,
      "message": "This would sanitise a `null` found in the `RefUpdate` when performing validation, however, NPEs may happen elsewhere when the non-sanitised `RefUpdate` nulls will be used in other parts of the library.\n\nThe Issue 430336832 is fixed with I0602aa007 where Gerrit was passing nulls as the new object id, so this isn\u0027t necessarily needed.\n\nHowever, I agree that it would be best to have sentinels in place to detect such situations, but they should be:\n\n1. At the beginning of the interface entering the global-refdb\n2. They should also report the anomaly as a warning before the sanitisation\n\nThis adaptation is both partial and too silent.",
      "range": {
        "startLine": 43,
        "startChar": 20,
        "endLine": 43,
        "endChar": 75
      },
      "revId": "c83ccea0c0cc486ec370dcf0caeed9f3e29310e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67743e52_7edfe94e",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateSnapshot.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2025-07-11T13:16:06Z",
      "side": 1,
      "message": "So the initial issue we\u0027re trying to resolve is not an NPE, it\u0027s rather a comparison of a sha1 vs null.\nThis said, trying to prevent NPEs everywhere RefUpdate is used seems pointless? If we care so much about this then we should change `RefUpdate` directly to return `Object.zeroId` when a value isn\u0027t set.\n\nMy worry is that now that we\u0027re looking into this we do this sanitaziation everywhere, only for someone in a months time to forget it needs to be sanitised and reintroduce the same problem.\n\nI agree that we should probably log something, at least at debug level, that we\u0027re modifying a null ref value to zero.",
      "parentUuid": "b621bd31_23f0dca4",
      "range": {
        "startLine": 43,
        "startChar": 20,
        "endLine": 43,
        "endChar": 75
      },
      "revId": "c83ccea0c0cc486ec370dcf0caeed9f3e29310e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a28daf8_f653ee03",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateSnapshot.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-07-11T20:51:56Z",
      "side": 1,
      "message": "\u003e So the initial issue we\u0027re trying to resolve is not an NPE, it\u0027s rather a comparison of a sha1 vs null.\n\u003e This said, trying to prevent NPEs everywhere RefUpdate is used seems pointless? If we care so much about this then we should change `RefUpdate` directly to return `Object.zeroId` when a value isn\u0027t set.\n\nI don\u0027t believe we have an issue anymore: this is more a sentinel for preventing *future* bugs in Gerrit from propagating to unexpected behaviour in global-refdb.\n\nChanging it in JGit is an option, but still won\u0027t address the concern of adding a sentinel in global-refdb, that\u0027s the concern of this change.\n\n\u003e My worry is that now that we\u0027re looking into this we do this sanitaziation everywhere, only for someone in a months time to forget it needs to be sanitised and reintroduce the same problem.\n\nNope, if we add the sanitisation/check before the execution of *ALL* global-refdb API at the beginning of the interface. \nThis change is adding it when creating the RefUpdateSnapshot, which *is useful* but, as mentioned, not enough and too silently.",
      "parentUuid": "67743e52_7edfe94e",
      "range": {
        "startLine": 43,
        "startChar": 20,
        "endLine": 43,
        "endChar": 75
      },
      "revId": "c83ccea0c0cc486ec370dcf0caeed9f3e29310e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}