{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a236cde3_1d1db434",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-09-19T14:40:56Z",
      "side": 1,
      "message": "@luca.milanesio@gmail.com addressed your comments.\nTo DRY out the retrieving of `isDraftCommentEventsEnabled` I had to introduce a base class.\n\nWDYT?",
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f8dbab9_8697fc51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 3633525
      },
      "writtenOn": "2024-09-23T22:07:23Z",
      "side": 1,
      "message": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/SharedRefEnforcement.",
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3e1574b_9bac8703",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-24T10:21:52Z",
      "side": 1,
      "message": "Apologies, I\u0027ve abandoned by mistake.",
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "228d7f7e_c3fde47b",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/BaseRefEnforcement.java",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T17:32:36Z",
      "side": 1,
      "message": "This looks too complex: do a provider of a Boolean annotated with DraftCommentEventsEnabled and calculate through a provider.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 28,
        "endChar": 1
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54e8cc3e_456a5014",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/BaseRefEnforcement.java",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-09-24T08:59:35Z",
      "side": 1,
      "message": "Binding the annotation in `LibModule` [1] would not work\n\n```\n    bind(Boolean.class)\n        .annotatedWith(DraftCommentEventsEnabled.class)\n        .toProvider(DraftCommentEventsEnabledProvider.class);\n```\n\n\n```\nRequested by:\n1  : DefaultSharedRefEnforcement.\u003cinit\u003e(DefaultSharedRefEnforcement.java:33)\n      \\_ for 1st parameter draftCommentEventsEnabled\n     at ValidationModule.configure(ValidationModule.java:70)\n      \\_ installed by: GitModule -\u003e ValidationModule\n```\n\nI don\u0027t think there is any other way than binding the annotation in multi-site, as we do here [2].\n\nI think this is getting too complex?\n\n[1] https://gerrit.googlesource.com/modules/global-refdb/+/refs/heads/stable-3.9/src/main/java/com/gerritforge/gerrit/globalrefdb/validation/LibModule.java#26\n\n[2] https://gerrit.googlesource.com/plugins/multi-site/+/refs/heads/stable-3.9/src/main/java/com/googlesource/gerrit/plugins/multisite/validation/ValidationModule.java#70",
      "parentUuid": "228d7f7e_c3fde47b",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 28,
        "endChar": 1
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74845640_a32b8315",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/BaseRefEnforcement.java",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-24T09:36:36Z",
      "side": 1,
      "message": "In that case is quite easy: just use a specific class instead of binding a Boolean with the `annotatedWith`. You won\u0027t need to change anything in the module binding then.",
      "parentUuid": "54e8cc3e_456a5014",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 28,
        "endChar": 1
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b1d569a_6b542734",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/CustomSharedRefEnforcementByProject.java",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T17:32:36Z",
      "side": 1,
      "message": "Just inject BaseRefEnforcement here?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 24
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f1c536f_3a772224",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/CustomSharedRefEnforcementByProject.java",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T21:30:47Z",
      "side": 1,
      "message": "```suggestion\n  public CustomSharedRefEnforcementByProject(\n      SharedRefDbConfiguration config, @DraftCommentEventsEnabled Boolean draftCommentEventsEnabled) {\n```",
      "parentUuid": "0b1d569a_6b542734",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 24
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9caa784_1a9166d0",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/DefaultSharedRefEnforcement.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T21:30:47Z",
      "side": 1,
      "message": "```suggestion\n  public DefaultSharedRefEnforcement(@DraftCommentEventsEnabled Boolean draftCommentEventsEnabled) {\n    this.draftCommentEventsEnabled \u003d draftCommentEventsEnabled;\n  }\n```",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 3
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77fbff2e_33e67243",
        "filename": "src/test/java/com/gerritforge/gerrit/globalrefdb/validation/BatchRefUpdateValidatorTest.java",
        "patchSetId": 4
      },
      "lineNbr": 262,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T21:30:47Z",
      "side": 1,
      "message": "Not needed, if we add an overloaded constructor.",
      "range": {
        "startLine": 262,
        "startChar": 53,
        "endLine": 262,
        "endChar": 65
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "266515ef_6a715df4",
        "filename": "src/test/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/CustomSharedRefEnforcementByProjectTest.java",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T21:30:47Z",
      "side": 1,
      "message": "Not needed, if we add an overloaded constructor.",
      "range": {
        "startLine": 144,
        "startChar": 69,
        "endLine": 144,
        "endChar": 83
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97346861_afe16cd5",
        "filename": "src/test/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/DefaultSharedRefEnforcementTest.java",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T21:30:47Z",
      "side": 1,
      "message": "Not needed, if we add an overloaded constructor.",
      "range": {
        "startLine": 27,
        "startChar": 72,
        "endLine": 27,
        "endChar": 84
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f8e99fe_378c4e07",
        "filename": "src/test/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/DefaultSharedRefEnforcementTest.java",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-09-23T21:30:47Z",
      "side": 1,
      "message": "```suggestion\n    SharedRefEnforcement refEnforcement \u003d new DefaultSharedRefEnforcement(true);\n```",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 90,
        "endChar": 88
      },
      "revId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "843d990ee863d51bab57a4397fb2f57e259b7b40",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}