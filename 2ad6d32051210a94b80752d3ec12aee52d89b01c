{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1c5481fe_3f21b216",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-09-22T09:02:23Z",
      "side": 1,
      "message": "Is this correct? I can\u0027t see this interface in this change.",
      "range": {
        "startLine": 9,
        "startChar": 24,
        "endLine": 9,
        "endChar": 41
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e726fee_9777a268",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-09T15:21:27Z",
      "side": 1,
      "message": "Typo it should be `ExtendedGlobalRefDatabase`",
      "parentUuid": "1c5481fe_3f21b216",
      "range": {
        "startLine": 9,
        "startChar": 24,
        "endLine": 9,
        "endChar": 41
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a62bd6d_8c7b5a42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-09-22T09:02:23Z",
      "side": 1,
      "message": "I\u0027m probably missing context here, but this doesn\u0027t match the expectation in the issue (i.e. retry compare-and-swap). Are there split brain risks associated with this method? Should they be mentioned somewhere?",
      "range": {
        "startLine": 10,
        "startChar": 41,
        "endLine": 11,
        "endChar": 54
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87e41114_b9d6735b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-09T15:21:27Z",
      "side": 1,
      "message": "We decided that we do not need to check the current value before updating value when updating `refs/meta/version`",
      "parentUuid": "0a62bd6d_8c7b5a42",
      "range": {
        "startLine": 10,
        "startChar": 41,
        "endLine": 11,
        "endChar": 54
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69404899_d8030b84",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-10-10T09:08:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "87e41114_b9d6735b",
      "range": {
        "startLine": 10,
        "startChar": 41,
        "endLine": 11,
        "endChar": 54
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cee7ce23_3700c76e",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-09-22T09:02:23Z",
      "side": 1,
      "message": "Is it safe to do this, instead of `compareAndPut`? Should the javadoc mention that `compareAndPut` would be preferable, and this should only be used in certain cases?",
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc1833b9_c05444e4",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-09T15:21:27Z",
      "side": 1,
      "message": "It depends on the context. We cannot say that `compareAndPut` is preferable. It is the same as for example in `java.util.concurrent.atomic.AtomitcInteger` where you have `compareAndSet`[1] and `set`[2] methods but the documentation is not mentioning which one is preferred or what are the use cases.\n\n1.https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicInteger.html#compareAndSet-int-int-\n2.https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicInteger.html#set-int-",
      "parentUuid": "cee7ce23_3700c76e",
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0541d7a_1c1c8d80",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-10-10T09:08:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fc1833b9_c05444e4",
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0229d4f_1cb06c98",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-09-22T09:02:23Z",
      "side": 1,
      "message": "Nit: why not `put`, to use the same nomenclature as `compareAndPut`?",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 14
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4b45057_b9a7795f",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-09T15:21:27Z",
      "side": 1,
      "message": "Well if we want to follow the java api we should have `compareAndSet` instead of `compareAndPut`\n\nhttps://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicInteger.html#compareAndSet-int-int-",
      "parentUuid": "d0229d4f_1cb06c98",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 14
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8376c348_8f2d4d43",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-10-10T09:08:59Z",
      "side": 1,
      "message": "We could do... but `compareAndPut` is what the method is called in this codebase, and this method is analogous to that, not to that of `AtomicInteger`. Or were you thinking to rename `compareAndPut` to `compareAndSet` (in a prior change, perhaps?), that way we\u0027d use `set`?\n\n`compareAndPut` and `set` aren\u0027t consistent with each other.",
      "parentUuid": "d4b45057_b9a7795f",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 14
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da033c34_5b86ac15",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/ExtendedGlobalRefDatabase.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-10T10:33:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8376c348_8f2d4d43",
      "range": {
        "startLine": 32,
        "startChar": 11,
        "endLine": 32,
        "endChar": 14
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb40dd9_7679764a",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/SharedRefDatabaseWrapper.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-09-22T09:02:23Z",
      "side": 1,
      "message": "Why do we need this need to be `public`?",
      "range": {
        "startLine": 116,
        "startChar": 2,
        "endLine": 116,
        "endChar": 8
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23ad8cd2_acd86e13",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/SharedRefDatabaseWrapper.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-09-22T09:10:25Z",
      "side": 1,
      "message": "Ah, used in multisite [1]\n\n[1] https://gerrit-review.googlesource.com/c/plugins/multi-site/+/386901",
      "parentUuid": "ffb40dd9_7679764a",
      "range": {
        "startLine": 116,
        "startChar": 2,
        "endLine": 116,
        "endChar": 8
      },
      "revId": "2ad6d32051210a94b80752d3ec12aee52d89b01c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}