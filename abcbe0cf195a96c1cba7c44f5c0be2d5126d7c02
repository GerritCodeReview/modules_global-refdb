{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b23ce5e8_76b2935c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "overridable",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f1433d_22c79e1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "Move the example config above this paragraph and add another `rule` line, then it is easier to follow.",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8889376_f1e687f3",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 38,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "included\n\nSince we use INCLUDE/EXCLUDE in the rules we shall also prefer using included/excluded in the documentation.",
      "range": {
        "startLine": 38,
        "startChar": 33,
        "endLine": 38,
        "endChar": 39
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77afc54e_078fc194",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 40,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "where the first rule with matching pattern applies",
      "range": {
        "startLine": 39,
        "startChar": 56,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "002a5d85_20cdc60d",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 43,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "```suggestion\n    1. `refs/draft-comments/*`\n```",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 27
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2404261d_773bc529",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 44,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "```suggestion\n    2. `refs/changes/*` except `refs/changes/.../meta`: immutable refs\n```",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0dc661f_96e92063",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "```suggestion\n    3. `refs/cache-automerge/*`\n```",
      "range": {
        "startLine": 45,
        "startChar": 8,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e84b81a_1fd41678",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "rules",
      "range": {
        "startLine": 47,
        "startChar": 18,
        "endLine": 47,
        "endChar": 26
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ef9d0a5_80d307b6",
        "filename": "config.md",
        "patchSetId": 14
      },
      "lineNbr": 72,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "rules",
      "range": {
        "startLine": 72,
        "startChar": 56,
        "endLine": 72,
        "endChar": 64
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a62e9e6_8608491f",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/SharedRefDbConfiguration.java",
        "patchSetId": 14
      },
      "lineNbr": 196,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "This `Man.Entry` is used as a \"tuple\" of (STORAGE_RULE, PATTERN). I suggest to create a type representing that tuple:\n```\nclass StorageRule {\n  StorageRuleType ruleType;\n  String pattern;\n}\n```",
      "range": {
        "startLine": 196,
        "startChar": 17,
        "endLine": 196,
        "endChar": 42
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0adeb3a_4106c300",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/SharedRefDbConfiguration.java",
        "patchSetId": 14
      },
      "lineNbr": 199,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "Use Guava\u0027s `Splitter`",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8f3f2ef_8e749448",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/DefaultSharedRefEnforcement.java",
        "patchSetId": 14
      },
      "lineNbr": 29,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "```suggestion\n   * Constructs a {@code DefaultSharedRefEnforcement} with the values specified in the\n```",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88d0ec9f_fd8ee98c",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/DefaultSharedRefEnforcement.java",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "is this true for this class?",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa23d44d_a9ecf05d",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/SharedRefEnforcement.java",
        "patchSetId": 14
      },
      "lineNbr": 29,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "StorageRuleType\n\nsee the next comments for the reason",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70cb8748_affdac0a",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/SharedRefEnforcement.java",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "What is `customPatterns` in the context of this class?",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87626429_a5a84499",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/SharedRefEnforcement.java",
        "patchSetId": 14
      },
      "lineNbr": 68,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "This will compile the regex returned by `entry.getValue()` every time when this statement is executed, which is expensive and should be optimized so that patterns from the rules are compiled only once.",
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bda1f3f_19b73c3e",
        "filename": "src/test/java/com/gerritforge/gerrit/globalrefdb/validation/dfsrefdb/DefaultSharedRefEnforcementTest.java",
        "patchSetId": 14
      },
      "lineNbr": 41,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-05-17T09:27:08Z",
      "side": 1,
      "message": "```suggestion\n        Arrays.asList(StorageRule.INCLUDE.name() + \":^.*\"));\n```",
      "range": {
        "startLine": 41,
        "startChar": 53,
        "endLine": 41,
        "endChar": 55
      },
      "revId": "abcbe0cf195a96c1cba7c44f5c0be2d5126d7c02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}