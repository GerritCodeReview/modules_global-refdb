{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b5112fdd_b4717139",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 10,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-03-10T12:00:08Z",
      "side": 1,
      "message": "I wonder if the term \"out-of-sync\" might be misleading in this context. The local refdb could have already moved by the time we perform the check, which means a simple out-of-sync state isn\u0027t necessarily the issue here.\n\nWhat we are actually guarding against is ensuring that we never update the global refdb to a non-existent value—cases where a failure at the Git protocol level prevents the expected ref update from being written in the first place.\n\nThis isn\u0027t just about detecting divergence between the local and global refdb, but specifically preventing invalid updates caused by failed operations.\n\nI think you already explain this properly later on, perhaps we could do without this sentence?",
      "range": {
        "startLine": 9,
        "startChar": 48,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc6f6e51_fa99d3e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T13:00:32Z",
      "side": 1,
      "message": "\u003e I wonder if the term \"out-of-sync\" might be misleading in this context. The local refdb could have already moved by the time we perform the check,\n\nHow can this happen? The update is protected with a global-refdb lock, which freezes the ref-updates globally.\n\n\u003e What we are actually guarding against is ensuring that we never update the global refdb to a non-existent value—cases where a failure at the Git protocol level prevents the expected ref update from being written in the first place.\n\nThe Git protocol is not involved here: the operation may have done at the API level and without involving any remote protocol interaction at all.\n\n\u003e This isn\u0027t just about detecting divergence between the local and global refdb, but specifically preventing invalid updates caused by failed operations.\n\nThe explicitly failing operations were covered already, this is for preventing the \"implicitly failing\" operations to cause an update on the global-refdb.\n\nE.g. Before I1c05dc3d95, the tests were performing an implicitly failing ref-update and asserting that the global-refdb was updated anyway, which should have failed in the first place, but it didn\u0027t. \n\n\u003e I think you already explain this properly later on, perhaps we could do without this sentence?\n\nI believe the sentence should stay, I\u0027ll try to rephrase it.",
      "parentUuid": "b5112fdd_b4717139",
      "range": {
        "startLine": 9,
        "startChar": 48,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cb15407_128aebbf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 21,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-03-10T12:00:08Z",
      "side": 1,
      "message": "```suggestion\nupdated as expected. Prevent nasty\nout of sync that would require a Gerrit admin to action and solve\nthem one-by-one.\n```",
      "range": {
        "startLine": 19,
        "startChar": 21,
        "endLine": 21,
        "endChar": 16
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "847e8bac_6b38907b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T13:11:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cb15407_128aebbf",
      "range": {
        "startLine": 19,
        "startChar": 21,
        "endLine": 21,
        "endChar": 16
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb2beedd_22b0fe48",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 226,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-03-10T12:00:08Z",
      "side": 1,
      "message": "Is this faster than \"exactRef\"?\nI guess the only question I have with this code is whether we have an idea of how much this extra check adds to the latency of the overall put operation.",
      "range": {
        "startLine": 226,
        "startChar": 32,
        "endLine": 226,
        "endChar": 45
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abda9f1b_2616333a",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 226,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T13:13:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb2beedd_22b0fe48",
      "range": {
        "startLine": 226,
        "startChar": 32,
        "endLine": 226,
        "endChar": 45
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "004468e6_79842d81",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 226,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T13:40:03Z",
      "side": 1,
      "message": "I believe it is best to keep the `findRef` for now, as it is already used at L335 when fetching the current ref.\n\nWe could then move away from `findRef` in a follow-up change, which *could* be also seen as a breaking change as it would not perform a search anymore but use it as an exact ref.",
      "parentUuid": "abda9f1b_2616333a",
      "range": {
        "startLine": 226,
        "startChar": 32,
        "endLine": 226,
        "endChar": 45
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f57a66ba_48a5cadc",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 239,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-03-10T12:00:08Z",
      "side": 1,
      "message": "```suggestion\n                  + \" is different than the one expected after a successful update\");\n```",
      "range": {
        "startLine": 239,
        "startChar": 35,
        "endLine": 239,
        "endChar": 39
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "775099ab_a397c6b5",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 239,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-03-10T12:00:08Z",
      "side": 1,
      "message": "I find the sentence \"the one expected after a successful update\" a bit cryptic. Isn\u0027t that simply \"refPair.putValue\"?",
      "range": {
        "startLine": 239,
        "startChar": 40,
        "endLine": 239,
        "endChar": 82
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50d4f17b_3535189a",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 239,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T13:13:27Z",
      "side": 1,
      "message": "Fix applied.",
      "parentUuid": "f57a66ba_48a5cadc",
      "range": {
        "startLine": 239,
        "startChar": 35,
        "endLine": 239,
        "endChar": 39
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb2b7f7_417fbcef",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 239,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-03-10T13:40:03Z",
      "side": 1,
      "message": "Would a Gerrit admin know what `refPair.putValue` is? We cannot assume that the Gerrit admin is a Java developer and can read the code.\n\nDo you have a better sentence to describe it?",
      "parentUuid": "775099ab_a397c6b5",
      "range": {
        "startLine": 239,
        "startChar": 40,
        "endLine": 239,
        "endChar": 82
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "799f5732_b6bada58",
        "filename": "src/main/java/com/gerritforge/gerrit/globalrefdb/validation/RefUpdateValidator.java",
        "patchSetId": 17
      },
      "lineNbr": 239,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-03-10T13:52:36Z",
      "side": 1,
      "message": "I didn\u0027t mean to use the literal \"refPair.putValue\", but rather its value.\n\n```\nhas been aborted to avoid an out of sync: local object 123 is different than 456\n```\n\nJust a nit anway.",
      "parentUuid": "deb2b7f7_417fbcef",
      "range": {
        "startLine": 239,
        "startChar": 40,
        "endLine": 239,
        "endChar": 82
      },
      "revId": "0d519db35ff87bcc9e99a8c43f66253f5cc4a334",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}