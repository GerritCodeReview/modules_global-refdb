{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b8c91b78_79c8245e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-08-03T12:54:23Z",
      "side": 1,
      "message": "Would you accept moving this to a stable version ?\nWe are currently on 3.7 ...",
      "revId": "e91643f7136917a9008e1d6af7b7e4d3dd883820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "944e1c06_77adbe30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-03T14:05:10Z",
      "side": 1,
      "message": "I agree on the renaming for master. With regards to stable branches, this would have a ripple effect on all existing setups because the RefPair is a public class. I would keep it for master only.",
      "revId": "e91643f7136917a9008e1d6af7b7e4d3dd883820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a41c7b9_febd4156",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-03T14:12:00Z",
      "side": 1,
      "message": "Why don\u0027t you split the change in two:\n- Reduce the visibility of RefPair to package-private on stable-3.6\n- Check that all *-refdb plugins are working as expected\n- Check that HA, multi-site and pull-replication are fine\n\nOnce the above is done, we can then do the refactoring as a separate change on stable-3.6\n\nWDYT?",
      "parentUuid": "944e1c06_77adbe30",
      "revId": "e91643f7136917a9008e1d6af7b7e4d3dd883820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daebc2de_d7175353",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-09-12T11:56:39Z",
      "side": 1,
      "message": "Shouldn\u0027t it be sufficient to check if all these related plugins don\u0027t use RefPair and still compile after reducing visibility of RefPair ?",
      "parentUuid": "9a41c7b9_febd4156",
      "revId": "e91643f7136917a9008e1d6af7b7e4d3dd883820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d65392da_e5e5419b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-19T14:00:01Z",
      "side": 1,
      "message": "True, can you check this?",
      "parentUuid": "daebc2de_d7175353",
      "revId": "e91643f7136917a9008e1d6af7b7e4d3dd883820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2804abeb_916ccb61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2024-05-15T15:22:43Z",
      "side": 1,
      "message": "I successfully ran the `spanner-refdb` and `zookeeper-refdb` tests with this version of global-refdb on docker on Mac.\n\nCouldn\u0027t run the tests of `aws-dynamodb-refdb` on Mac, they failed with\n\n```\n1) shouldEnsureRefsDbTableExists(com.googlesource.gerrit.plugins.validation.dfsrefdb.dynamodb.DynamoDBRefDatabaseIT)\njava.lang.ExceptionInInitializerError\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat com.google.gerrit.testing.ConfigSuite$ConfigRunner.createTest(ConfigSuite.java:194)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:108)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:116)\n\tat com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:145)\n\tat com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:76)\nCaused by: java.lang.IllegalStateException: Could not find a valid Docker environment. Please see logs and check configuration\n\tat org.testcontainers.dockerclient.DockerClientProviderStrategy.lambda$getFirstValidStrategy$7(DockerClientProviderStrategy.java:276)\n\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\n\tat org.testcontainers.dockerclient.DockerClientProviderStrategy.getFirstValidStrategy(DockerClientProviderStrategy.java:267)\n\tat org.testcontainers.DockerClientFactory.getOrInitializeStrategy(DockerClientFactory.java:150)\n\tat org.testcontainers.DockerClientFactory.getTransportConfig(DockerClientFactory.java:156)\n\tat org.testcontainers.DockerClientFactory.getRemoteDockerUnixSocketPath(DockerClientFactory.java:171)\n\tat org.testcontainers.containers.localstack.LocalStackContainer.\u003cinit\u003e(LocalStackContainer.java:112)\n\tat org.testcontainers.containers.localstack.LocalStackContainer.\u003cinit\u003e(LocalStackContainer.java:94)\n\tat com.googlesource.gerrit.plugins.validation.dfsrefdb.dynamodb.DynamoDBRefDatabaseIT.\u003cclinit\u003e(DynamoDBRefDatabaseIT.java:47)\n\t... 42 more\n```\n\nDavid successfully tested the `aws-dynamodb-refdb` implementation with this change on Linux.",
      "parentUuid": "d65392da_e5e5419b",
      "revId": "e91643f7136917a9008e1d6af7b7e4d3dd883820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}